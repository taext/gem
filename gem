#!/home/dd/anaconda3/bin/python

"""   GnuPG encryption to default pubkey module. 
(https://github.com/taext/gem-and-cle/blob/master/gem)"""

          _____                    _____                    _____          
         /\    \                  /\    \                  /\    \         
        /::\    \                /::\    \                /::\____\        
       /::::\    \              /::::\    \              /::::|   |        
      /::::::\    \            /::::::\    \            /:::::|   |        
     /:::/\:::\    \          /:::/\:::\    \          /::::::|   |        
    /:::/  \:::\    \        /:::/__\:::\    \        /:::/|::|   |        
   /:::/    \:::\    \      /::::\   \:::\    \      /:::/ |::|   |        
  /:::/    / \:::\    \    /::::::\   \:::\    \    /:::/  |::|___|______  
 /:::/    /   \:::\ ___\  /:::/\:::\   \:::\    \  /:::/   |::::::::\    \ 
/:::/____/  ___\:::|    |/:::/__\:::\   \:::\____\/:::/    |:::::::::\____\
\:::\    \ /\  /:::|____|\:::\   \:::\   \::/    /\::/    / ~~~~~/:::/    /
 \:::\    /::\ \::/    /  \:::\   \:::\   \/____/  \/____/      /:::/    / 
  \:::\   \:::\ \/____/    \:::\   \:::\    \                  /:::/    /  
   \:::\   \:::\____\       \:::\   \:::\____\                /:::/    /   
    \:::\  /:::/    /        \:::\   \::/    /               /:::/    /    
     \:::\/:::/    /          \:::\   \/____/               /:::/    /     
      \::::::/    /            \:::\    \                  /:::/    /      
       \::::/    /              \:::\____\                /:::/    /       
        \::/____/                \::/    /                \::/    /        
                                  \/____/                  \/____/         
                                                                           

         ######################################################
         #                                                    #
         #            gem v3.11 (November 13th 2020)          #
         #                                                    #
         #            What's New: Add cool ASCII art          #
         #                                                    #
         #                                                    #
         ######################################################

import gnupg
import sys
import gnupg._parsers

# monkey patch from https://github.com/isislovecruft/python-gnupg/issues/207
gnupg._parsers.Verify.TRUST_LEVELS["ENCRYPTION_COMPLIANCE_MODE"] = 23


def main(clear_text,
         pubkey_file_name='pubkey.asc',
         pubkey_file_path='/path/to/pubkey/'):

    """Takes clear text string, optionally pubkey filename
       and file path, returns PGP-encrypted string."""

    gpg = gnupg.GPG()
    key_data = open(pubkey_file_path + pubkey_file_name).read()

    import_result = gpg.import_keys(key_data)
    fingerprint = import_result.results[0]['fingerprint']

    encr_data = gpg.encrypt(clear_text, fingerprint)
    result = str(encr_data)

    return result


if __name__ == '__main__':

    if len(sys.argv) == 1:  # no arguments, piping mode
        args = sys.stdin.read()  # if no piped input,
        print(main(args))        # reads from keyboard
    else:
        args = []
        [args.append(item) for item in sys.argv[1:]]

        if args:
            print(main(*args))
    
